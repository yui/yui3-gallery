{
    "project": {
        "name": "QR Code Generator Base",
        "description": ""
    },
    "files": {
        "js/qr-code-generator-base.js": {
            "name": "js/qr-code-generator-base.js",
            "modules": {
                "gallery-qr-code-generator-base": 1
            },
            "classes": {
                "QrCode": 1,
                "QrCode.Data": 1,
                "QrCode.GeneratorBase": 1,
                "QrCode.AlphanumericData": 1,
                "QrCode.ByteData": 1,
                "QrCode.NumericData": 1,
                "QrCode.Ucs2Data": 1,
                "QrCode.Utf8Data": 1
            },
            "fors": {
                "QrCode.Data": 1,
                "QrCode.GeneratorBase": 1,
                "QrCode.AlphanumericData": 1,
                "QrCode.ByteData": 1,
                "QrCode.NumericData": 1,
                "QrCode.Ucs2Data": 1,
                "QrCode.Utf8Data": 1,
                "QrCode": 1
            },
            "namespaces": {
                "QrCode": 1
            }
        }
    },
    "modules": {
        "gallery-qr-code-generator-base": {
            "name": "gallery-qr-code-generator-base",
            "submodules": {},
            "classes": {
                "QrCode": 1,
                "QrCode.Data": 1,
                "QrCode.GeneratorBase": 1,
                "QrCode.AlphanumericData": 1,
                "QrCode.ByteData": 1,
                "QrCode.NumericData": 1,
                "QrCode.Ucs2Data": 1,
                "QrCode.Utf8Data": 1
            },
            "fors": {
                "QrCode.Data": 1,
                "QrCode.GeneratorBase": 1,
                "QrCode.AlphanumericData": 1,
                "QrCode.ByteData": 1,
                "QrCode.NumericData": 1,
                "QrCode.Ucs2Data": 1,
                "QrCode.Utf8Data": 1,
                "QrCode": 1
            },
            "namespaces": {
                "QrCode": 1
            },
            "tag": "module",
            "file": "js/qr-code-generator-base.js",
            "line": 1,
            "description": "gallery-qr-code-generator-base is a slightly low-level utility for generating\nQR Codes."
        }
    },
    "classes": {
        "QrCode": {
            "name": "QrCode",
            "shortname": "QrCode",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-qr-code-generator-base",
            "namespace": "",
            "file": "js/qr-code-generator-base.js",
            "line": 7,
            "static": 1
        },
        "QrCode.Data": {
            "name": "QrCode.Data",
            "shortname": "QrCode.Data",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode",
            "file": "js/qr-code-generator-base.js",
            "line": 2990,
            "description": "This class shouldn't be used directly.  It is intended as an\ninterface to implement a specific data encoding mode.",
            "is_constructor": 1,
            "extends": "Base",
            "params": [
                {
                    "name": "config",
                    "description": "Configuration object.",
                    "type": "Object"
                }
            ]
        },
        "QrCode.GeneratorBase": {
            "name": "QrCode.GeneratorBase",
            "shortname": "QrCode.GeneratorBase",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode",
            "file": "js/qr-code-generator-base.js",
            "line": 3044,
            "description": "This class provides utility methods for generating QR Codes.",
            "is_constructor": 1,
            "extends": "Base",
            "params": [
                {
                    "name": "config",
                    "description": "Configuration object.",
                    "type": "Object"
                }
            ]
        },
        "QrCode.AlphanumericData": {
            "name": "QrCode.AlphanumericData",
            "shortname": "QrCode.AlphanumericData",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode",
            "file": "js/qr-code-generator-base.js",
            "line": 4438,
            "description": "This class encodes a value in alphanumeric mode.  Alphanumeric mode\nencodes strings containing only numeric characters, capital-letter\ncharacters, space, dollar sign, percent sign, asterisk, plus sign,\nhyphen-minus, full stop, solidus, and colon.\n0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:",
            "is_constructor": 1,
            "extends": "QrCode.Data",
            "params": [
                {
                    "name": "config",
                    "description": "Configuration object.",
                    "type": "Object"
                }
            ]
        },
        "QrCode.ByteData": {
            "name": "QrCode.ByteData",
            "shortname": "QrCode.ByteData",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode",
            "file": "js/qr-code-generator-base.js",
            "line": 4557,
            "description": "This class encodes a value in byte mode.  Byte mode encodes strings\nas raw binary data.",
            "is_constructor": 1,
            "extends": "QrCode.Data",
            "params": [
                {
                    "name": "config",
                    "description": "Configuration object.",
                    "type": "Object"
                }
            ]
        },
        "QrCode.NumericData": {
            "name": "QrCode.NumericData",
            "shortname": "QrCode.NumericData",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode",
            "file": "js/qr-code-generator-base.js",
            "line": 4643,
            "description": "This class encodes a value in numeric mode.  Numeric mode encodes\nstrings containing only numeric characters.\n0123456789",
            "is_constructor": 1,
            "extends": "QrCode.Data",
            "params": [
                {
                    "name": "config",
                    "description": "Configuration object.",
                    "type": "Object"
                }
            ]
        },
        "QrCode.Ucs2Data": {
            "name": "QrCode.Ucs2Data",
            "shortname": "QrCode.Ucs2Data",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode",
            "file": "js/qr-code-generator-base.js",
            "line": 4723,
            "description": "This class sets the extended channel interpretation mode indicator\nfor the ucs2 character set.  While this is a Data object, it does not\ndirectly encode data.  Instead, it sets a flag in the data stream\nwhich tells a decoder how to interpret the data that follows.  Ucs2\nis an interesting character set because JavaScript strings are\nhandled in ucs2.  Combined with the ByteData object and a character\nwidth set to 16, any JavaScript string can be precisely encoded.\nUnfortunately it appears that many decoders lack support for the ucs2\ncharacter set.  Android's standard Barcode Scanner application does\nprovide support, but the font used to display the result is not able\nto render the entire range of unicode characters.",
            "is_constructor": 1,
            "extends": "QrCode.Data",
            "params": [
                {
                    "name": "config",
                    "description": "Configuration object.",
                    "type": "Object"
                }
            ]
        },
        "QrCode.Utf8Data": {
            "name": "QrCode.Utf8Data",
            "shortname": "QrCode.Utf8Data",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode",
            "file": "js/qr-code-generator-base.js",
            "line": 4778,
            "description": "This class sets the extended channel interpretation mode indicator\nfor the utf8 character set.  While this is a Data object, it does not\ndirectly encode data.  Instead, it sets a flag in the data stream\nwhich tells a decoder how to interpret the data that follows.  Utf8\nis a widely supported character set, so this may be a good choice if\nyou need to encode characters that are not supported in alphanumeric\nmode.  Note that JavaScript strings do not use utf8 characters.  This\nmodule does not provide the functionality required to convert\ncharacters to utf8.",
            "is_constructor": 1,
            "extends": "QrCode.Data",
            "params": [
                {
                    "name": "config",
                    "description": "Configuration object.",
                    "type": "Object"
                }
            ]
        }
    },
    "classitems": [
        {
            "file": "js/qr-code-generator-base.js",
            "line": 3000,
            "description": "This is an abstract method that should be implemented to return a\nproperly formatted binary string for a specific data encoding\nmode.",
            "itemtype": "method",
            "name": "toBinaryString",
            "params": [
                {
                    "name": "version",
                    "description": "",
                    "type": "Number|String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "QrCode.Data",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 3011,
            "description": "When extending this class, the value of type should be\nspecifically defined.  Make sure the type is also set on the\nY.QrCode.Data.Type object.",
            "itemtype": "attribute",
            "name": "type",
            "initonly": "",
            "type": "String",
            "class": "QrCode.Data",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 3025,
            "description": "The value to encode.",
            "itemtype": "attribute",
            "name": "value",
            "initonly": "",
            "class": "QrCode.Data",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 3035,
            "description": "This object lists all supported data encoding modes.",
            "itemtype": "property",
            "name": "Type",
            "static": 1,
            "type": "[String]",
            "class": "QrCode.Data",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 3053,
            "description": "Performs a mask operation that inverts some data bits.  QR Codes\napply one of eight possible masks to the raw data matrix.\nDecoders benefit when a mask is used to reduce the occurence of\nambiguous patterns within the data matrix.",
            "itemtype": "method",
            "name": "applyMask",
            "chainable": 1,
            "params": [
                {
                    "name": "matrix",
                    "description": "The array to write the results to.\nExisting data will be overwritten.",
                    "type": "[Boolean]"
                },
                {
                    "name": "dataMatrix",
                    "description": "An array with the source data.\nNon-data elements should be undefined.",
                    "type": "[Boolean]"
                },
                {
                    "name": "maskFunction",
                    "description": "A function that accepts x and y\ncoordinates and returns true or false.  The x and y coordinates\npassed to the mask function do not account for the quiet zone\nregion.  When the mask function returns true, the data at that\nposition is inverted.",
                    "type": "Function"
                },
                {
                    "name": "quietZoneSize",
                    "description": "The size of the quiet zone region.",
                    "type": "Number"
                },
                {
                    "name": "size",
                    "description": "The square root of the length of matrix.\n(dataMatrix and matrix should be the same size.)",
                    "type": "Number"
                },
                {
                    "name": "callbackFunction",
                    "description": "This function will be called\nonce the mask has been applied.  It is guaranteed to be called in\na future turn of the event loop.  The modified matrix will be\npassed as the only argument.",
                    "type": "Function"
                }
            ],
            "class": "QrCode.GeneratorBase",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 3121,
            "description": "Alignment patterns are distinct patterns used to help decoders\novercome distortion and perspective when viewing a QR Code.  They\nare made up of a 5x5 square of dark values surrounding a 3x3\nsquare of light values surrounding a single dark value.",
            "itemtype": "method",
            "name": "drawAlignmentPattern",
            "chainable": 1,
            "params": [
                {
                    "name": "matrix",
                    "description": "The array to write to.",
                    "type": "[Boolean]"
                },
                {
                    "name": "centerX",
                    "description": "The x coordinate of the center of the\nalignment pattern.",
                    "type": "Number"
                },
                {
                    "name": "centerY",
                    "description": "The y coordinate of the center of the\nalignment pattern.",
                    "type": "Number"
                },
                {
                    "name": "size",
                    "description": "The square root of the length of matrix.",
                    "type": "Number"
                },
                {
                    "name": "overwrite",
                    "description": "When set to true, the alignment\npattern will replace any existing data in the matrix at that\nlocation.",
                    "type": "Boolean"
                }
            ],
            "class": "QrCode.GeneratorBase",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 3160,
            "description": "Finder patterns are distinct patterns placed in three corners of\na QR code.  Finder patterns help decoders determine position,\nscale, and orientation.  They are made up of a 9x9 square of\nlight values surrounding a 7x7 square of dark values surrounding\na 5x5 square of light values surrounding a 3x3 square filled with\ndark values.",
            "itemtype": "method",
            "name": "drawFinderPattern",
            "chainable": 1,
            "params": [
                {
                    "name": "matrix",
                    "description": "The array to write to.",
                    "type": "[Boolean]"
                },
                {
                    "name": "centerX",
                    "description": "The x coordinate of the center of the\nfinder pattern.",
                    "type": "Number"
                },
                {
                    "name": "centerY",
                    "description": "The y coordinate of the center of the\nfinder pattern.",
                    "type": "Number"
                },
                {
                    "name": "size",
                    "description": "The square root of the length of matrix.",
                    "type": "Number"
                },
                {
                    "name": "overwrite",
                    "description": "When set to true, the finder pattern\nwill replace any existing data in the matrix at that location.",
                    "type": "Boolean"
                }
            ],
            "class": "QrCode.GeneratorBase",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 3200,
            "description": "The error correction level and the id of the mask that has been\napplied to the data matrix are encoded together as a 5 bit value.\nThis value gets 10 error correction bits appended to it, created\nby a (15, 5) BCH code.  The final 15 bit format information\ncodeword has specific locations reserved for it within the\nmatrix.  QR Codes contain the format information twice for\nadditional redundancy.",
            "itemtype": "method",
            "name": "drawFormatInformation",
            "chainable": 1,
            "params": [
                {
                    "name": "matrix",
                    "description": "The array to write to.",
                    "type": "[Boolean]"
                },
                {
                    "name": "binaryString",
                    "description": "A string conatining 15 '1' or '0'\ncharacters.",
                    "type": "String"
                },
                {
                    "name": "micro",
                    "description": "Set this to true for a Micro QR Code or\nfalse for a QR Code.",
                    "type": "Boolean"
                },
                {
                    "name": "quietZoneSize",
                    "description": "The size of the quiet zone region.",
                    "type": "Number"
                },
                {
                    "name": "size",
                    "description": "The square root of the length of matrix.",
                    "type": "Number"
                },
                {
                    "name": "overwrite",
                    "description": "When set to true, the format\ninformation will replace any existing data in the matrix at that\nlocation.",
                    "type": "Boolean"
                }
            ],
            "class": "QrCode.GeneratorBase",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 3291,
            "description": "The quiet zone region is a padding of light values around the\noutside of a QR Code.  It helps separate the QR Code from other\nvisual elements.",
            "itemtype": "method",
            "name": "drawQuietZone",
            "chainable": 1,
            "params": [
                {
                    "name": "matrix",
                    "description": "The array to write to.",
                    "type": "[Boolean]"
                },
                {
                    "name": "quietZoneSize",
                    "description": "The size of the quiet zone region.",
                    "type": "Number"
                },
                {
                    "name": "size",
                    "description": "The square root of the length of matrix.",
                    "type": "Number"
                },
                {
                    "name": "overwrite",
                    "description": "When set to true, the quiet zone\nregion will replace any existing data in the matrix at that\nlocation.",
                    "type": "Boolean"
                }
            ],
            "class": "QrCode.GeneratorBase",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 3341,
            "description": "The timing pattern is a row and column of alternating dark and\nlight values.  The timing pattern allows decoders to determine\nthe version of the QR Code as well as the pixel density and\ncoordinate system.",
            "itemtype": "method",
            "name": "drawTimingPattern",
            "chainable": 1,
            "params": [
                {
                    "name": "matrix",
                    "description": "The array to write to.",
                    "type": "[Boolean]"
                },
                {
                    "name": "coordinate",
                    "description": "The row and column index to write to.",
                    "type": "Number"
                },
                {
                    "name": "size",
                    "description": "The square root of the length of matrix.",
                    "type": "Number"
                },
                {
                    "name": "overwrite",
                    "description": "When set to true, the timing patter\nwill replace any existing data in the matrix at that location.",
                    "type": "Boolean"
                }
            ],
            "class": "QrCode.GeneratorBase",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 3375,
            "description": "QR Codes version 7 and higher contain the version number as a 6\nbit value.  This value gets 12 error correction bits appended to\nit, created by an (18, 6) Golay code.  The final 18 bit version\ninformation codeword has specific locations reserved for it\nwithin the matrix.  QR Codes contain the version information\ntwice for additional redundancy.",
            "itemtype": "method",
            "name": "drawVersionInformation",
            "chainable": 1,
            "params": [
                {
                    "name": "matrix",
                    "description": "The array to write to.",
                    "type": "[Boolean]"
                },
                {
                    "name": "binaryString",
                    "description": "A string conatining 18 '1' or '0'\ncharacters.",
                    "type": "String"
                },
                {
                    "name": "quietZoneSize",
                    "description": "The size of the quiet zone region.",
                    "type": "Number"
                },
                {
                    "name": "size",
                    "description": "The square root of the length of matrix.",
                    "type": "Number"
                },
                {
                    "name": "overwrite",
                    "description": "When set to true, the version\ninformation will replace any existing data in the matrix at that\nlocation.",
                    "type": "Boolean"
                }
            ],
            "class": "QrCode.GeneratorBase",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 3429,
            "description": "Several potential matrices are generated during the masking\nprocess.  This method searches a matrix for negative features and\ngenerates a penalty score.  This score is used to determine which\nmatrix to keep.",
            "itemtype": "method",
            "name": "evaluateMatrix",
            "chainable": 1,
            "params": [
                {
                    "name": "matrix",
                    "description": "The array to examine.",
                    "type": "[Boolean]"
                },
                {
                    "name": "quietZoneSize",
                    "description": "The size of the quiet zone region.",
                    "type": "Number"
                },
                {
                    "name": "size",
                    "description": "The square root of the length of matrix.",
                    "type": "Number"
                },
                {
                    "name": "callbackFunction",
                    "description": "This function will be called\nonce the matrix has been evaluated.  It is guaranteed to be\ncalled in a future turn of the event loop.  The score will be\npassed as the only argument.",
                    "type": "Function"
                }
            ],
            "class": "QrCode.GeneratorBase",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 3581,
            "description": "Several potential matrices are generated during the masking\nprocess.  This method searches for dark values along the non\ntiming pattern edges.  Dark values along these edges make it\neasier for decoders to determine the difference between data and\nthe quiet zone region.  The matrix is given a score used to\ndetermine which matrix to keep.",
            "itemtype": "method",
            "name": "evaluateMicroMatrix",
            "chainable": 1,
            "params": [
                {
                    "name": "matrix",
                    "description": "The array to examine.",
                    "type": "[Boolean]"
                },
                {
                    "name": "quietZoneSize",
                    "description": "The size of the quiet zone region.",
                    "type": "Number"
                },
                {
                    "name": "size",
                    "description": "The square root of the length of matrix.",
                    "type": "Number"
                },
                {
                    "name": "callbackFunction",
                    "description": "This function will be called\nonce the matrix has been evaluated.  It is guaranteed to be\ncalled in a future turn of the event loop.  The score will be\npassed as the only argument.",
                    "type": "Function"
                }
            ],
            "class": "QrCode.GeneratorBase",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 3625,
            "description": "This method formats the given data into the final binary string\nused to create a data matrix.",
            "itemtype": "method",
            "name": "formatBinaryString",
            "chainable": 1,
            "params": [
                {
                    "name": "binaryString",
                    "description": "A string of '1' and '0' characters.",
                    "type": "String"
                },
                {
                    "name": "callbackFunction",
                    "description": "This function will be called\nonce the binary string has been formated.  It is guaranteed to be\ncalled in a future turn of the event loop.  If an error occurs,\nthe error message will be passed as the first argument.  The\nformatted binary string is passed as the second argument.",
                    "type": "Function"
                }
            ],
            "class": "QrCode.GeneratorBase",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 3820,
            "description": "Generate a QR Code matrix.",
            "itemtype": "method",
            "name": "generate",
            "chainable": 1,
            "params": [
                {
                    "name": "callbackFunction",
                    "description": "This function will be called\nonce the matrix has been generated.  It is guaranteed to be\ncalled in a future turn of the event loop.  If an error occurs,\nthe error message will be passed as the first argument.  The\nmatrix is passed as the second argument.  The square root of the\nlength of the matrix is passed as the third argument.",
                    "type": "Function"
                }
            ],
            "class": "QrCode.GeneratorBase",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 3878,
            "description": "This method creates a new matrix containing only raw data bits.",
            "itemtype": "method",
            "name": "generateDataMatrix",
            "chainable": 1,
            "params": [
                {
                    "name": "matrix",
                    "description": "An array without any data bits defined.\nThis matrix is only used to position data bits around other\nfeatures that are already present.  This matrix is not modified.",
                    "type": "[Boolean]"
                },
                {
                    "name": "binaryString",
                    "description": "A string of '1' and '0' characters.",
                    "type": "String"
                },
                {
                    "name": "coordinate",
                    "description": "The coordinate of the vertical timing\npattern.",
                    "type": "Number"
                },
                {
                    "name": "quietZoneSize",
                    "description": "The size of the quiet zone region.",
                    "type": "Number"
                },
                {
                    "name": "size",
                    "description": "The square root of the length of matrix.",
                    "type": "Number"
                },
                {
                    "name": "callbackFunction",
                    "description": "This function will be called\nonce the dataMatrix has been generated.  It is guaranteed to be\ncalled in a future turn of the event loop.  The dataMatrix is\npassed as the only argument.",
                    "type": "Function"
                }
            ],
            "class": "QrCode.GeneratorBase",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 3966,
            "description": "Generates a block of error correction codewords based on a block\nof data codewords.",
            "itemtype": "method",
            "name": "generateErrorCorrectionBlock",
            "chainable": 1,
            "params": [
                {
                    "name": "dataBlock",
                    "description": "Array of strings of '1' and '0'\ncharacters, 8 characters long each.",
                    "type": "[String]"
                },
                {
                    "name": "errorCorrectionBlockLength",
                    "description": "The number of 8 bit\ncodewords to generate in the error correction block.",
                    "type": "Number"
                },
                {
                    "name": "callbackFunction",
                    "description": "This function will be called\nonce the error correction block has been generated.  It is\nguaranteed to be called in a future turn of the event loop. The\nerror correction block is passed as the only argument.",
                    "type": "Function"
                }
            ],
            "class": "QrCode.GeneratorBase",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4046,
            "description": "Generates a matrix which represents the given data.",
            "itemtype": "method",
            "name": "generateMatrix",
            "chainable": 1,
            "params": [
                {
                    "name": "binaryString",
                    "description": "A string of '1' and '0' characters.",
                    "type": "String"
                },
                {
                    "name": "callbackFunction",
                    "description": "This function will be called\nonce the matrix has been generated.  It is guaranteed to be\ncalled in a future turn of the event loop.  The matrix is passed\nas the first argument.  The square root of the length of the\nmatrix is passed as the second argument.",
                    "type": "Function"
                }
            ],
            "class": "QrCode.GeneratorBase",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4268,
            "description": "Each QR Code version has specific requirements for the position\nof alignment patterns.  This method returns the center position\nof each required alignment pattern.",
            "itemtype": "method",
            "name": "getAlignmentPatternCoordinates",
            "params": [
                {
                    "name": "quietZoneSize",
                    "description": "The size of the quiet zone region.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "[[x, y]]"
            },
            "class": "QrCode.GeneratorBase",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4302,
            "description": "Converts the value of the data attribute\nto a string of '1' and '0' characters.",
            "itemtype": "method",
            "name": "getBinaryString",
            "chainable": 1,
            "params": [
                {
                    "name": "callbackFunction",
                    "description": "This function will be called\nonce the binary string has been created.  It is guaranteed to be\ncalled in a future turn of the event loop. The binary string is\npassed as the only argument.",
                    "type": "Function"
                }
            ],
            "class": "QrCode.GeneratorBase",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4330,
            "description": "Returns the proper size of a matrix for this version.",
            "itemtype": "method",
            "name": "getSize",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "QrCode.GeneratorBase",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4346,
            "description": "Input data must be wrapped up in data objects.  A single data\nobject or an array is acceptable.  Data objects are\nresponsible for encoding raw values into one of the data\nencoding modes supported by QR codes.",
            "itemtype": "attribute",
            "name": "data",
            "default": "[]",
            "initonly": "",
            "type": "Array",
            "class": "QrCode.GeneratorBase",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4369,
            "description": "QR Codes use error correction when encoding data.  Error\ncorrection allows a code to be successfully scanned even if\npart of the code is damaged, missing, or scanned incorrectly.\nThere are four different error correction modes.\nMode H can recover from 30% data loss.\nMode L can recover from 7% data loss.\nMode M can recover from 15% data loss.\nMode Q can recover from 25% data loss.\nThe more error correction added, the less data the QR Code\ncan hold.",
            "itemtype": "attribute",
            "name": "errorCorrection",
            "default": "'M',",
            "initonly": "",
            "type": "String",
            "class": "QrCode.GeneratorBase",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4396,
            "description": "QR Codes apply one of eight possible masks to the raw data\nmatrix.  Decoders benefit when a mask is used to reduce the\noccurence of ambiguous patterns within the data matrix.  When\nthis attribute is set to null, the data matrix will be have\nall 8 masks applied to it.  Each one will be evaluated and\nthe one with the fewest ambiguous patterns will be used.\nWhen this attribute is set to a value from 0 to 7, only that\nspecific mask will be applied and used.  This improves the\nperformace of the encoding process by cutting out a complex\nstep but manually selecting a mask is not recommended because\nit can negatively affect decoder performance and/or accuracy.\nUsing different masks on the same data can result in QR Codes\nthat appear very different, so some choose to select a mask\nfor aesthetic reasons.",
            "itemtype": "attribute",
            "name": "mask",
            "default": "null",
            "initonly": "",
            "type": "Number",
            "class": "QrCode.GeneratorBase",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4420,
            "description": "There are 40 different versions of QR Codes. A QR Code's\nversion is just a confusing way to specify how big it is.  A\nversion 1 QR Code is a 25x25 grid.  That size increases by 4\nup to the 181x181 grid of a version 40 QR code.  The larger\nthe grid, the more data the QR Code can hold.",
            "itemtype": "attribute",
            "name": "version",
            "default": "'1'",
            "initonly": "",
            "type": "String",
            "class": "QrCode.GeneratorBase",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4451,
            "description": "Returns a properly formatted binary string for alphanumeric data.",
            "itemtype": "method",
            "name": "toBinaryString",
            "params": [
                {
                    "name": "version",
                    "description": "",
                    "type": "Number|String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "QrCode.AlphanumericData",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4532,
            "itemtype": "attribute",
            "name": "type",
            "default": "'alphanumeric'",
            "readonly": "",
            "type": "String",
            "class": "QrCode.AlphanumericData",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4542,
            "itemtype": "attribute",
            "name": "value",
            "initonly": "",
            "type": "Number|String",
            "class": "QrCode.AlphanumericData",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4567,
            "description": "Returns a properly formatted binary string for byte data.",
            "itemtype": "method",
            "name": "toBinaryString",
            "params": [
                {
                    "name": "version",
                    "description": "",
                    "type": "Number|String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "QrCode.ByteData",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4610,
            "description": "The number of bits used to encode each character.",
            "itemtype": "attribute",
            "name": "characterWidth",
            "default": "8",
            "initonly": "",
            "type": "Number",
            "class": "QrCode.ByteData",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4621,
            "itemtype": "attribute",
            "name": "type",
            "default": "'byte'",
            "readonly": "",
            "type": "String",
            "class": "QrCode.ByteData",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4631,
            "itemtype": "attribute",
            "name": "value",
            "initonly": "",
            "type": "Number|String",
            "class": "QrCode.ByteData",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4654,
            "description": "Returns a properly formatted binary string for numeric data.",
            "itemtype": "method",
            "name": "toBinaryString",
            "params": [
                {
                    "name": "version",
                    "description": "",
                    "type": "Number|String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "QrCode.NumericData",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4698,
            "itemtype": "attribute",
            "name": "type",
            "default": "'numeric'",
            "readonly": "",
            "type": "String",
            "class": "QrCode.NumericData",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4708,
            "itemtype": "attribute",
            "name": "value",
            "initonly": "",
            "type": "Number|String",
            "class": "QrCode.NumericData",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4742,
            "description": "Returns a properly formatted binary string for ucs2 data.",
            "itemtype": "method",
            "name": "toBinaryString",
            "params": [
                {
                    "name": "version",
                    "description": "",
                    "type": "Number|String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "QrCode.Ucs2Data",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4754,
            "itemtype": "attribute",
            "name": "type",
            "default": "'ucs2'",
            "readonly": "",
            "type": "String",
            "class": "QrCode.Ucs2Data",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4764,
            "description": "This object does not require a value.",
            "itemtype": "attribute",
            "name": "value",
            "default": "''",
            "readonly": "",
            "type": "Number|String",
            "class": "QrCode.Ucs2Data",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4795,
            "description": "Returns a properly formatted binary string for utf8 data.",
            "itemtype": "method",
            "name": "toBinaryString",
            "params": [
                {
                    "name": "version",
                    "description": "",
                    "type": "Number|String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "QrCode.Utf8Data",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4807,
            "itemtype": "attribute",
            "name": "type",
            "default": "'utf8'",
            "readonly": "",
            "type": "String",
            "class": "QrCode.Utf8Data",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4817,
            "description": "This object does not require a value.",
            "itemtype": "attribute",
            "name": "value",
            "default": "''",
            "readonly": "",
            "type": "Number|String",
            "class": "QrCode.Utf8Data",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4831,
            "description": "Converts a decimal non-negative integer to a string containing '1' and\n'0' characters.  If the number does not fit within the given length, null\nis returned.  If the number is smaller than the given length, it is\npadded with '0' and a string with the given length is returned.",
            "itemtype": "method",
            "name": "numberToBinaryString",
            "params": [
                {
                    "name": "number",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "length",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "static": 1,
            "class": "QrCode",
            "module": "gallery-qr-code-generator-base"
        }
    ]
}